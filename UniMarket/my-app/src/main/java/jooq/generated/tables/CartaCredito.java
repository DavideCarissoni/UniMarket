/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables;


import java.util.Collection;

import jooq.generated.DefaultSchema;
import jooq.generated.tables.records.CartaCreditoRecord;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CartaCredito extends TableImpl<CartaCreditoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>carta_credito</code>
     */
    public static final CartaCredito CARTA_CREDITO = new CartaCredito();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CartaCreditoRecord> getRecordType() {
        return CartaCreditoRecord.class;
    }

    /**
     * The column <code>carta_credito.numero_carta</code>.
     */
    public final TableField<CartaCreditoRecord, Integer> NUMERO_CARTA = createField(DSL.name("numero_carta"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>carta_credito.codice_sicurezza</code>.
     */
    public final TableField<CartaCreditoRecord, String> CODICE_SICUREZZA = createField(DSL.name("codice_sicurezza"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>carta_credito.nome_intestatario</code>.
     */
    public final TableField<CartaCreditoRecord, String> NOME_INTESTATARIO = createField(DSL.name("nome_intestatario"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>carta_credito.cognome_intestatario</code>.
     */
    public final TableField<CartaCreditoRecord, String> COGNOME_INTESTATARIO = createField(DSL.name("cognome_intestatario"), SQLDataType.CLOB.nullable(false), this, "");

    private CartaCredito(Name alias, Table<CartaCreditoRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private CartaCredito(Name alias, Table<CartaCreditoRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>carta_credito</code> table reference
     */
    public CartaCredito(String alias) {
        this(DSL.name(alias), CARTA_CREDITO);
    }

    /**
     * Create an aliased <code>carta_credito</code> table reference
     */
    public CartaCredito(Name alias) {
        this(alias, CARTA_CREDITO);
    }

    /**
     * Create a <code>carta_credito</code> table reference
     */
    public CartaCredito() {
        this(DSL.name("carta_credito"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public CartaCredito as(String alias) {
        return new CartaCredito(DSL.name(alias), this);
    }

    @Override
    public CartaCredito as(Name alias) {
        return new CartaCredito(alias, this);
    }

    @Override
    public CartaCredito as(Table<?> alias) {
        return new CartaCredito(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public CartaCredito rename(String name) {
        return new CartaCredito(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CartaCredito rename(Name name) {
        return new CartaCredito(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public CartaCredito rename(Table<?> name) {
        return new CartaCredito(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public CartaCredito where(Condition condition) {
        return new CartaCredito(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public CartaCredito where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public CartaCredito where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public CartaCredito where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public CartaCredito where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public CartaCredito where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public CartaCredito where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public CartaCredito where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public CartaCredito whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public CartaCredito whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
