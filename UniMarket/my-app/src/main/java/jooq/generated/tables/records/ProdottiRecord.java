/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records;


import java.time.LocalDateTime;

import jooq.generated.tables.Prodotti;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProdottiRecord extends UpdatableRecordImpl<ProdottiRecord> implements Record5<Integer, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>prodotti.codice</code>.
     */
    public void setCodice(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>prodotti.codice</code>.
     */
    public Integer getCodice() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>prodotti.nome</code>.
     */
    public void setNome(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>prodotti.nome</code>.
     */
    public String getNome() {
        return (String) get(1);
    }

    /**
     * Setter for <code>prodotti.descrizione</code>.
     */
    public void setDescrizione(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>prodotti.descrizione</code>.
     */
    public String getDescrizione() {
        return (String) get(2);
    }

    /**
     * Setter for <code>prodotti.prezzo</code>.
     */
    public void setPrezzo(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>prodotti.prezzo</code>.
     */
    public String getPrezzo() {
        return (String) get(3);
    }

    /**
     * Setter for <code>prodotti.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>prodotti.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Prodotti.PRODOTTI.CODICE;
    }

    @Override
    public Field<String> field2() {
        return Prodotti.PRODOTTI.NOME;
    }

    @Override
    public Field<String> field3() {
        return Prodotti.PRODOTTI.DESCRIZIONE;
    }

    @Override
    public Field<String> field4() {
        return Prodotti.PRODOTTI.PREZZO;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Prodotti.PRODOTTI.TIMESTAMP;
    }

    @Override
    public Integer component1() {
        return getCodice();
    }

    @Override
    public String component2() {
        return getNome();
    }

    @Override
    public String component3() {
        return getDescrizione();
    }

    @Override
    public String component4() {
        return getPrezzo();
    }

    @Override
    public LocalDateTime component5() {
        return getTimestamp();
    }

    @Override
    public Integer value1() {
        return getCodice();
    }

    @Override
    public String value2() {
        return getNome();
    }

    @Override
    public String value3() {
        return getDescrizione();
    }

    @Override
    public String value4() {
        return getPrezzo();
    }

    @Override
    public LocalDateTime value5() {
        return getTimestamp();
    }

    @Override
    public ProdottiRecord value1(Integer value) {
        setCodice(value);
        return this;
    }

    @Override
    public ProdottiRecord value2(String value) {
        setNome(value);
        return this;
    }

    @Override
    public ProdottiRecord value3(String value) {
        setDescrizione(value);
        return this;
    }

    @Override
    public ProdottiRecord value4(String value) {
        setPrezzo(value);
        return this;
    }

    @Override
    public ProdottiRecord value5(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public ProdottiRecord values(Integer value1, String value2, String value3, String value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProdottiRecord
     */
    public ProdottiRecord() {
        super(Prodotti.PRODOTTI);
    }

    /**
     * Create a detached, initialised ProdottiRecord
     */
    public ProdottiRecord(Integer codice, String nome, String descrizione, String prezzo, LocalDateTime timestamp) {
        super(Prodotti.PRODOTTI);

        setCodice(codice);
        setNome(nome);
        setDescrizione(descrizione);
        setPrezzo(prezzo);
        setTimestamp(timestamp);
        resetChangedOnNotNull();
    }
}
